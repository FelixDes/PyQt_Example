import numpy as np  # Сначала убедитесь, что python устанавливает пакет numpy


def gauss(a, b):  # Определите функцию самостоятельно, независимые переменные - a, b
    cout = 0  # Определить время расчета
    m, n = a.shape  # Количество строк и столбцов матрицы a
    if m < n:
        print()  # Убедитесь, что количество уравнений больше, чем количество неизвестных
    else:
        l = np.zeros((n, n))
        for i in range(n):
            # фактор ограничения
            if a[i][i] == 0:
                print("no answer")

                # j означает столбец
        for k in range(n - 1):  # k представляет первый слой цикла,(0，n-1)Строка
            for i in range(k + 1,
                           n):  # i означает цикл второго слоя,(k+1,n)Строка,Рассчитать коэффициент исключения строки
                l[i][k] = a[i][k] / a[k][k]  # Calculationl
                cout += 1  # Время расчета плюс один
                for j in range(m):  # j представляет столбец, выполнять операции с каждым столбцом
                    a[i][j] = a[i][j] - l[i][k] * a[k][j]
                    cout += 1
                b[i] = b[i] - l[i][k] * b[k]
                # Вернуться к решению уравнения
        x = np.zeros(n)  # Сначала установите значение отмены назначения равным нулю, а затем вычислите одно за другим
        x[n - 1] = b[n - 1] / a[n - 1][n - 1]  # Сначала вычислить последнее x решение

        for i in range(n - 2, -1, -1):  # Вернуть и пересчитать каждое решение по очереди
            for j in range(i + 1, n):
                b[i] -= a[i][j] * x[j]  # Поскольку увеличение и уменьшение
            x[i] = b[i] / a[i][i]
        for i in range(n):
            print("x" + str(i + 1) + " = ", x[i])
        print("x" " = ", x)
        print(cout)


# ---------------Это основная программа, ниже - программа ввода.

if __name__ == '__main__':  # Когда модуль запускается напрямую, следующие блоки кода будут запущены: Когда модуль импортирован, блоки кода не будут запущены.
    a = np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]])  # Матрица входных коэффициентов
    b = np.array([-6.0, 0.020, 0.96])  # Расширенная матрица с одним столбцом
    gauss(a, b)  # Выполнить функцию guassin operation

print([[] for _ in range(3)])
